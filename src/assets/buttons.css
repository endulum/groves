.button {
  font-size: 1rem;
  line-height: 1.25rem;
  font-weight: bold;
  text-decoration: none;
  border-radius: var(--radius);
  padding: 0.5rem 1rem;
  transition: color 0.25s ease, background-color 0.25s ease, border 0.25s ease;
  justify-content: center;

  span,
  small {
    min-width: max-content;
    white-space: nowrap;
  }

  svg {
    width: 1.25rem;
    height: 1.25rem;
    transition: color 0.25s ease;
  }

  &[disabled] {
    opacity: 0.5;
  }

  &:not([disabled]):hover {
    cursor: pointer;
  }

  &:has(svg) {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 0.5rem;
  }

  &:not(:has(span)) {
    padding: 0.5rem;
  }

  &.primary,
  &.secondary {
    color: var(--white1);
    background-color: var(--color);
    &:not(.plain):not([disabled]):hover {
      background-color: oklch(from var(--color) calc(l + 0.05) c h);
    }
  }

  &.plain {
    color: var(--fg);
    background-color: transparent;
    &:not([disabled]):hover {
      background-color: oklch(from var(--fg) l c h / 0.05);
    }
    &.primary,
    &.secondary,
    &.warning {
      color: var(--color);
    }
  }

  &:has(small) {
    gap: 0.25rem;
    line-height: 0.5rem;
    svg {
      width: 1rem;
      height: 1rem;
    }
  }
}

.dark {
  /* anything with the dark accent background */
  background-color: var(--accent1);

  button.primary,
  a[type="button"].primary {
    background-color: transparent;
    border: 1px solid oklch(from var(--color) calc(l + 0.5) c h / 0.25);
    svg {
      color: oklch(from var(--color) calc(l + 0.5) c h / 0.5);
    }
    &:not(.plain):not([disabled]):hover {
      background-color: transparent;
      border: 1px solid oklch(from var(--color) calc(l + 0.5) c h / 0.5);
      svg {
        color: oklch(from var(--color) calc(l + 0.5) c h / 0.75);
      }
    }
    &.plain {
      color: var(--white1);
      border: 1px solid transparent;
      &:has(span),
      &:has(small) {
        padding: 0.5rem 0.75rem;
      }
      svg {
        color: oklch(from var(--accent1) calc(l + 0.5) c h / 0.5);
      }
      &:not([disabled]):hover {
        background-color: oklch(from var(--accent1) calc(l + 0.125) c h / 0.5);
        svg {
          color: oklch(from var(--accent1) calc(l + 0.5) c h / 0.5);
        }
      }
    }
  }
}

/* header .button,
.cta .button {
  &.primary {
    background-color: transparent;
    border: 1px solid oklch(from var(--color) calc(l + 0.5) c h / 0.25);
    svg {
      color: oklch(from var(--color) calc(l + 0.5) c h / 0.5);
    }
    &:not(.plain):not([disabled]):hover {
      background-color: transparent;
      border: 1px solid oklch(from var(--color) calc(l + 0.5) c h / 0.5);
      svg {
        color: oklch(from var(--color) calc(l + 0.5) c h / 0.75);
      }
    }
  }

  &.plain {
    color: var(--white1);
    border: 1px solid transparent;
    &:has(span),
    &:has(small) {
      padding: 0.5rem 0.75rem;
    }
    svg {
      color: oklch(from var(--accent1) calc(l + 0.5) c h / 0.5);
    }
    &:not([disabled]):hover {
      background-color: oklch(from var(--accent1) calc(l + 0.125) c h / 0.5);
      svg {
        color: oklch(from var(--accent1) calc(l + 0.5) c h / 0.5);
      }
    }
  }
}
 */
